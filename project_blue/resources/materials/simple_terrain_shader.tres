[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;

//general settings
uniform float specular : hint_range(0, 1) = 0.5;
uniform float metallic : hint_range(0, 1) = 0.0;
uniform float roughness : hint_range(0, 1) = 1.0;

uniform float terrain_height_max = 1.0;

//albedo settings
uniform vec4 albedo_water : hint_color;
uniform vec4 albedo_sand : hint_color;
uniform vec4 albedo_grass : hint_color;
uniform vec4 albedo_snow : hint_color;
uniform vec4 albedo_rock : hint_color;
uniform vec4 albedo_stone : hint_color;

uniform float water_height_max = 0.0;
uniform float sand_height_max = 0.5;
uniform float grass_height_max = 0.75;
uniform float rock_height_max = 0.5;

const float snow_height_max = 1.0;
const float stone_height_max = 1.0;

uniform float alb_water_blend = 0;

uniform float grass_sand_blend = 0;
uniform float snow_grass_blend = 0;
uniform float stone_rock_blend = 0;
uniform float hor_vert_blend_start = 0.5;
uniform float hor_vert_blend_end = 0.5;

//variables
varying float height;
varying float vertical_angle;
varying float ang_scale;

vec4 blend_albedo(float boundary, float low_height, vec4 low_albedo, vec4 high_albedo) {
	float scale = (height - low_height)/(boundary - low_height);
	return high_albedo * scale + low_albedo * (1.0 - scale);
}

float get_boundary(float blend, float low_height, float high_height) {
	return low_height + (high_height - low_height) * blend;
}

vec4 get_hor_albedo() {
	float sand_grass_boundary = get_boundary(grass_sand_blend, sand_height_max, grass_height_max);
	float grass_snow_boundary = get_boundary(snow_grass_blend, grass_height_max, snow_height_max);
	
	vec4 hor_albedo;
	if (height <= sand_height_max){
		hor_albedo = albedo_sand;
	}
	else if (height <= sand_grass_boundary){
		hor_albedo = blend_albedo(sand_grass_boundary, sand_height_max, albedo_sand, albedo_grass);
	}
	else if (height <= grass_height_max){
		hor_albedo = albedo_grass;
	}
	else if (height <= grass_snow_boundary){
		hor_albedo = blend_albedo(grass_snow_boundary, grass_height_max, albedo_grass, albedo_snow);
	}
	else{
		hor_albedo = albedo_snow;
	}
	return hor_albedo;
}

vec4 get_vert_albedo() {
	float rock_stone_boundary = get_boundary(stone_rock_blend, rock_height_max, stone_height_max);
	
	vec4 vert_albedo;
	if (height <= rock_height_max){
		vert_albedo = albedo_rock;
	}
	else if (height <= rock_stone_boundary){
		vert_albedo = blend_albedo(rock_stone_boundary, rock_height_max, albedo_rock, albedo_stone);
	}
	else{
		vert_albedo = albedo_stone;
	}
	return vert_albedo;
}

vec4 get_final_albedo() {
	vec4 hor_albedo = get_hor_albedo();
	vec4 vert_albedo = get_vert_albedo();
	
	vec4 alb;
	if (ang_scale <= hor_vert_blend_start) {
		alb = vert_albedo;
	}
	else if (ang_scale <= hor_vert_blend_end) {
		float scale = (ang_scale - hor_vert_blend_start)/(hor_vert_blend_end - hor_vert_blend_start);
		alb = hor_albedo * scale + vert_albedo * (1.0 - scale);
	}
	else {
		alb = hor_albedo;
	}
	return alb;
}

void vertex() {
	height = VERTEX.y/terrain_height_max;
	ang_scale = dot(NORMAL, vec3(0,1.0,0));
}

void fragment() {
	float water_alb_boundary = water_height_max - water_height_max * alb_water_blend;
	if (height <= water_alb_boundary){
		ALBEDO = albedo_water.xyz;
	}
	else{
		vec4 alb = get_final_albedo();
		if (height <= water_height_max) {
			alb = blend_albedo(water_alb_boundary, water_height_max, alb, albedo_water);
		}
		ALBEDO = alb.xyz;
	}

	SPECULAR = specular;
	METALLIC = metallic;
	ROUGHNESS = roughness;
}
"

[resource]
shader = SubResource( 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/terrain_height_max = 500.0
shader_param/albedo_water = Color( 0.0392157, 0.301961, 0.576471, 1 )
shader_param/albedo_sand = Color( 0.709804, 0.705882, 0.329412, 1 )
shader_param/albedo_grass = Color( 0.0235294, 0.380392, 0.0509804, 1 )
shader_param/albedo_snow = Color( 1, 1, 1, 1 )
shader_param/albedo_rock = Color( 0.427451, 0.239216, 0.00784314, 1 )
shader_param/albedo_stone = Color( 0.309804, 0.309804, 0.309804, 1 )
shader_param/water_height_max = 0.099
shader_param/sand_height_max = 0.112
shader_param/grass_height_max = 0.308
shader_param/rock_height_max = 0.236
shader_param/alb_water_blend = 0.101
shader_param/grass_sand_blend = 0.06
shader_param/snow_grass_blend = 0.169
shader_param/stone_rock_blend = 0.067
shader_param/hor_vert_blend_start = 0.182
shader_param/hor_vert_blend_end = 1.0
